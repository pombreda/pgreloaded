<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE module SYSTEM "api.dtd">

<module name="pygame2.sdlgfx.base">
  <show>0</show>
  <alias>pygame2.sdlgfx</alias>
  <short>basic SDL_gfx wrapper module</short>
  <desc>
    Basic SDL_gfx library wrapper module
  </desc>

  <class name="FPSmanager">
    <constructor>FPSManager ([framerate]) -> FPSManager</constructor>
    <desc>
      Creates a new FPSManager using the specified frame rate.
      
      The FPSManager takes care of measuring and keeping constant frame
      rates  for the application it is used with. On demand it automatically
      delays the execution to keep the required frame rate.

      The desired frame rate must be within the range of
      :const:`FPS_LOWER_LIMIT` and :const:`FPS_UPPER_LIMIT`. If the
      *framerate* argument is omitted, :const:`FPS_DEFAULT` is assumed
      for it.
    </desc>
    <method name="delay">
      <call>delay () -> None</call>
      <desc>
        Delays the execution of the application to keep up the desired frame
        rate.
      </desc>
    </method>
    <attr name="framerate">
      <desc>Gets or sets the frame rate to keep.</desc>
    </attr>
  </class>

  <func name="get_compiled_version">
    <call>get_compiled_version () -> (int, int, int)</call>
    <desc>
      Gets the SDL_gfx version pygame2 was compiled against as
      three-value tuple.

      This version is built at compile time. It can be used to detect
      which features may not be available through Pygame, if it is used
      as precompiled package using a different version of the SDL_gfx
      library.
    </desc>
  </func>
</module>

